language: rust
cache:
  apt: true
  cargo: true

env:
  global:
    # This is the -Werror of Rust
    - RUSTFLAGS="--deny warnings"
    # Used for installation
    - LLVM_VERSION=9

install:
  # Install LLVM
  - sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" bash $LLVM_VERSION
  - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-$LLVM_VERSION 100
  - sudo update-alternatives --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-$LLVM_VERSION 100
  - sudo apt install libc++-dev libc++abi-dev --yes
  # No idea why we need to modify this here
  - PATH=/usr/bin:$PATH
  - llvm-config --version

#  # We're going to use the WASI SDK here because Travis does not give
#  # us enough time to compile LLVM
#  - wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-6/wasi-sdk-6.0-linux.tar.gz
#  - tar xvf wasi-sdk-6.0-linux.tar.gz
#  - mkdir -p wasmception/dist
#  - ln -s $(realpath wasi-sdk-6.0/opt/wasi-sdk/bin) wasmception/dist/bin
#  - ln -s $(realpath wasi-sdk-6.0/opt/wasi-sdk/share/wasi-sysroot) wasmception/sysroot

script:
  # Make sure we compile
  - cargo build
  # Test compile any features
  - cargo build --features "cortex-m-attrs"
  - cd wasmception
  - make
  - cd ..
  # Now lets test the code benches
  - cd code_benches
  - python3 run.py
